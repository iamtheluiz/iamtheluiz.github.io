{"version":3,"sources":["services/repos.js","services/projects.js","components/Header/index.js","components/About/index.js","components/Project/index.js","components/Projects/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","name","description","technology","repository","color","website","title","cover","site","Header","sections","className","href","src","alt","map","section","key","id","About","target","rel","Project","project","inverted","Projects","repos","projects","i","repo","style","backgroundColor","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c6020c9.chunk.js","sourcesContent":["module.exports = [\r\n  {\r\n    name: 'Harmonist',\r\n    description: 'ðŸŽµ Harmonist is a application that helps you editing metadata from audio files',\r\n    technology: 'Typescript',\r\n    repository: 'https://github.com/iamtheluiz/harmonist',\r\n    color: '#2b7489'\r\n  },\r\n  {\r\n    name: 'md-pdf',\r\n    description: 'ðŸ“‘ Electron application to convert MD files to PDF',\r\n    technology: 'Typescript',\r\n    repository: 'https://github.com/iamtheluiz/md-pdf',\r\n    color: '#2b7489'\r\n  },\r\n  {\r\n    name: 'BeTheHero',\r\n    description: 'Projeto desenvolvido na Semana Omnistack 11 da Rocketseat',\r\n    technology: 'Javascript',\r\n    repository: 'https://github.com/iamtheluiz/BeTheHero',\r\n    color: '#f0db4f'\r\n  },\r\n  {\r\n    name: 'NLW-1.0',\r\n    description: 'Next Level Week 1.0 - Rocketseat',\r\n    technology: 'Typescript',\r\n    repository: 'https://github.com/iamtheluiz/NLW-1.0',\r\n    color: '#2b7489'\r\n  },\r\n  {\r\n    name: 'proffy',\r\n    description: 'Projeto desenvolvido na \"Next Level Week #2\" da Rocketseat',\r\n    technology: 'Typescript',\r\n    repository: 'https://github.com/iamtheluiz/NLW-1.0',\r\n    color: '#2b7489'\r\n  },\r\n  {\r\n    name: 'estudoPandemia',\r\n    description: 'Um estudo sobre o impacto da pandemia na baixada santista',\r\n    technology: 'Javascript',\r\n    repository: 'https://github.com/iamtheluiz/estudoPandemia',\r\n    website: 'https://pandemia-baixada.vercel.app/',\r\n    color: '#f0db4f'\r\n  }\r\n]","module.exports = [\n  {\n    title: 'ðŸ“… Gantt Organon',\n    description: 'Esse Ã© um Website para ajudar na criaÃ§Ã£o de cronogramas e o exportar como uma imagem. Desenvolvido com React.',\n    cover: 'https://raw.githubusercontent.com/iamtheluiz/gantt-organon/main/docs/screenshots/project.png',\n    repository: 'https://github.com/iamtheluiz/gantt-organon',\n    site: 'https://iamtheluiz.github.io/gantt-organon'\n  },\n]","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Header({ sections }) {\r\n  return (\r\n    <header className=\"container\">\r\n      <a href=\"/\">\r\n        <img src=\"/favicon.png\" alt=\"Site logo\" />\r\n      </a>\r\n      <nav>\r\n        <ul>\r\n          {sections.map(section => (\r\n            <li key={section.id}>\r\n              <a href={`#${section.id}`}>{section.name}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Icons\r\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa';\r\nimport { MdMail } from 'react-icons/md';\r\n\r\nimport './styles.css';\r\n\r\nexport default function About() {\r\n  return (\r\n    <section id=\"About\">\r\n      <img src=\"https://avatars.githubusercontent.com/u/32724000\" alt=\"Profile\" />\r\n      <h1>Luiz Gustavo</h1>\r\n      <p>Cada dia mais impressionado com as portas que a tecnologia estÃ¡ abrindo!</p>\r\n      <ul>\r\n        <li>\r\n          <a href=\"https://github.com/iamtheluiz/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <FaGithub />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://linkedin.com/in/luiz-gustavo-da-silva-vasconcellos-05192a192/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <FaLinkedinIn />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"mailto:luiz.s.vasconcellos@gmail.com\">\r\n            <MdMail />\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\nimport { FaGithub, FaGlobe } from 'react-icons/fa';\n\nimport './styles.css';\n\nexport default function Project({ project, inverted = false }) {\n  return (\n    <div className={`project-item ${inverted && 'inverted'}`}>\n      <img src={project.cover} alt={project.title} />\n      <div className=\"details\">\n        <strong>{project.title}</strong>\n        <p>{project.description}</p>\n        <div className=\"links\">\n          <a href={project.repository} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaGithub />\n            <span>Github</span>\n          </a>\n          <a href={project.site} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaGlobe />\n            <span>Site</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport projects from '../../services/projects';\r\n\r\nimport Project from '../Project';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Projects({ repos }) {\r\n  return (\r\n    <section id=\"Projects\">\r\n      <h2>Projetos</h2>\r\n      <div className=\"container\">\r\n        {projects.map((project, i) => (\r\n          <Project project={project} inverted={i % 2 === 1 ? true : false} />\r\n        ))}\r\n        <h3 className=\"more-repositories\">Outros RepositÃ³rios</h3>\r\n        <ul>\r\n          {repos.map(repo => (\r\n            <li key={repo.repository} className=\"card\">\r\n              <a href={repo.website ? repo.website : repo.repository} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h3>{repo.name}</h3>\r\n                <p>{repo.description}</p>\r\n                <footer>\r\n                  <div className=\"circle\" style={{ backgroundColor: repo.color }}></div> {repo.technology}\r\n                </footer>\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <a className=\"github-repositories\" href=\"https://github.com/iamtheluiz\" target=\"_blank\" rel=\"noopener noreferrer\">RepositÃ³rios no Github</a>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      &copy; Luiz Gustavo da Silva Vasconcellos 2021\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Site data\r\nimport repos from './services/repos';\r\n\r\n// Page components\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Projects from './components/Projects';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n  const sections = [\r\n    { name: 'Sobre', id: 'About' },\r\n    { name: 'Projetos', id: 'Projects' },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Header sections={sections} />\r\n      <main>\r\n        <About />\r\n        <Projects repos={repos} />\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}